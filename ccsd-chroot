#!/bin/bash
#****h* comoonics-bootimage/ccsd-chroot
#  NAME
#    ccsd-chroot
#    $Id$
#  DESCRIPTION
#    Initscript for stoping and starting ccsd in chroot for
#    sharedroots
#*******
#
# ccsd   start/stop ccsd
#
# chkconfig: 345 20 80
# description: Starts and stops ccsd
#
#
### BEGIN INIT INFO
# Provides:
### END INIT INFO

INITRD_DIR=/initrd
FENCE_CHROOT=/var/lib/fence_tool
FENCE_CHROOT_INITRD=/var/lib/fence_tool
CCSD_OPTS=

. /etc/init.d/functions
[ -f /etc/sysconfig/cluster ] && . /etc/sysconfig/cluster

LOCK_FILE="/var/lock/subsys/ccsd"

#****f* fenced-chroot/check_sharedroot
#  NAME
#    check_sharedroot
#  SYNOPSIS
#    function check_sharedroot {
#  MODIFICATION HISTORY
#  IDEAS
#  SOURCE
#
function check_sharedroot {
  root_fstype=$(mount | grep "/ " | awk 'BEGIN { exit_c=1; } { if ($5) { print $5; exit_c=0; } } END{ exit exit_c}')
  if [ "$root_fstype" = "gfs" ]; then
    return 1
  else
    return 0
  fi
}
#************ check_sharedroot

start()
{

  echo -n "Starting ccsd (chroot):"
  if [ -e /cdsl.local/FAILURE_ccsdd ]; then
  	passed
  	echo
  	echo "Leaving as errors detected before"
  	rm -f /cdsl.local/FAILURE_ccsd
  	exit 1
  fi

  status ccsd &> /dev/null
  if [ $? -ne 0 ]
    then
      action $"" chroot ${FENCE_CHROOT} /sbin/ccsd $CCSD_OPTS
      return $?
  fi
  success "start"
  echo
  return 0
}

stop()
{
  echo -n "Stopping ccsd (chroot):"
  for sec in $(seq 1 10)
    do
     if pidof ccsd > /dev/null
       then
         # get the pid of ccsd from /var/run/cluster/ccsd.pid
         # and break if the file is not there
         [ -r ${FENCE_CHROOT}/var/run/cluster/ccsd.pid ] || break

         pid=$(cat ${FENCE_CHROOT}/var/run/cluster/ccsd.pid )
         kill $pid 2> /dev/null || break

         sleep 1
     else
         success "shutdown"
         echo
         return 0
     fi
  done
  failure "shutdown"
  echo
  return 1
}
rtrn=1

# See how we were called.
case "$1" in
  start)
        start
        rtrn=$?
        [ $rtrn = 0 ] && touch $LOCK_FILE
        ;;

  stop)
        stop
        rtrn=$?
        [ $rtrn = 0 ] && rm -f $LOCK_FILE
        ;;

  restart)
        $0 stop
        $0 start
        rtrn=$?
        ;;

  status)
        status ccsd
        rtrn=$?
        ;;

  *)
        echo $"Usage: $0 {start|stop|restart|status}"
        ;;
esac

exit $rtrn
