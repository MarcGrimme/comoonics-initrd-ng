#
# /etc/syslog-ng/syslog-ng.conf
#
options { 
        # disable the chained hostname format in logs
        # (default is enabled)
        chain_hostnames(0);

        # the time to wait before a died connection is re-established
        # (default is 60)
        time_reopen(10);
       
        # the time to wait before an idle destination file is closed
        # (default is 60)
        time_reap(60);
       
        # the number of lines buffered before written to file
        # you might want to increase this if your disk isn't catching with
        # all the log messages you get or if you want less disk activity
        # (say on a laptop)
        # (default is 0)
        sync(0);

        # the number of lines fitting in the output queue
        log_fifo_size(2048);

        # enable or disable directory creation for destination files
        create_dirs(yes);

        # default owner, group, and permissions for log files
        # (defaults are 0, 0, 0600)
        #owner(root);
        #group(adm);
        perm(0640);

        # default owner, group, and permissions for created directories
        # (defaults are 0, 0, 0700)
        #dir_owner(root);
        #dir_group(root);
        dir_perm(0750);

        # enable or disable DNS usage
        # syslog-ng blocks on DNS queries, so enabling DNS may lead to
        # a Denial of Service attack
        # (default is yes)

        # a Denial of Service attack
        # (default is yes)
        use_dns(no);
 

        # maximum length of message in bytes
        # this is only limited by the program listening on the /dev/log Unix
        # socket, glibc can handle arbitrary length log messages, but -- for
        # example -- syslogd accepts only 1024 bytes
        # (default is 2048)
        log_msg_size(2048);
};

#
# 'src' is our main source definition. you can add
# more sources driver definitions to it, or define
# your own sources, i.e.:
#
#source my_src { .... };
#
source src {
	#
	# include internal syslog-ng messages
	# note: the internal() soure is required!
	#
	internal();

	#
	# standard Linux log source (this is the default place for the syslog()
    # function to send logs to)
    unix-stream("/dev/log" max-connections(10) keep-alive(no));
	#unix-dgram("/dev/log");

    # messages from the kernel
    # THIS MUST NOT BE USED WITH SLES10 AND COM.OONICS. THE boot.klog HANGS!!
    #file("/proc/kmsg" log_prefix("kernel: "));
    
	#
	# uncomment to process log messages from network:
	#
	#udp(ip("0.0.0.0") port(514));
};
