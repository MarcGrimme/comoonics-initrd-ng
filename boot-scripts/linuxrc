#!/bin/bash
#
# $Id: linuxrc,v 1.7 2006-06-07 09:42:23 marc Exp $
#
# @(#)$File$
#
# Copyright (c) 2001 ATIX GmbH.
# Einsteinstrasse 10, 85716 Unterschleissheim, Germany
# All rights reserved.
#
# This software is the confidential and proprietary information of ATIX
# GmbH. ("Confidential Information").  You shall not
# disclose such Confidential Information and shall use it only in
# accordance with the terms of the license agreement you entered into
# with ATIX.
#
# Kernelparameter for changing the bootprocess for the comoonics generic hardware detection alpha1
#    bootpart=...          Which linuxrc.{bootpart} file should be loaded into 
#                  that script.
#    com-stepmode=...      If set it asks for <return> after every step
#    com-debug=...         If set debug info is output
#
# Marc Grimme: existence of /etc/gfs-lib.sh with all gfs-functions. 
#         Should be the framework for all other functionalities as well.
#****h* comoonics-bootimage/linuxrc
#  NAME
#    linuxrc
#    $Id: linuxrc,v 1.7 2006-06-07 09:42:23 marc Exp $
#  DESCRIPTION
#    The first script called by the initrd.
#*******

#****f* linuxrc/main
#  NAME
#    main
#  SYNOPSIS
#    function main() {
#  MODIFICATION HISTORY
#  IDEAS
#  SOURCE
#
# initstuff is done in here
source /etc/boot-lib.sh

exec 3>/dev/console
exec 4>/dev/console

initEnv

# Print a text banner.
echo_local -en $"\t\tWelcome to "
if LC_ALL=C grep -q "Red Hat" /etc/redhat-release ; then
 [ "$BOOTUP" = "color" ] && echo -en "\\033[0;31m"
 echo_local -en "Red Hat"
 [ "$BOOTUP" = "color" ] && echo -en "\\033[0;39m"
 PRODUCT=`sed "s/Red Hat \(.*\) release.*/\1/" /etc/redhat-release`
 echo_local " $PRODUCT"
elif LC_ALL=C grep -q "Fedora" /etc/redhat-release ; then
 [ "$BOOTUP" = "color" ] && echo -en "\\033[0;31m"
 echo_local -en "Fedora"
 [ "$BOOTUP" = "color" ] && echo -en "\\033[0;39m"
 PRODUCT=`sed "s/Fedora \(.*\) release.*/\1/" /etc/redhat-release`
 echo_local " $PRODUCT"
else
 PRODUCT=`sed "s/ release.*//g" /etc/redhat-release`
 echo_local "$PRODUCT"
fi

if [ -n "$logger" ]; then
  exec 3>$bootlog 4>$bootlog 5>/dev/null
#  exec 3>/dev/console 4>/dev/console 
#  exec 5> $bootlog
  ./linuxrc.generic.sh 2>$bootlog | tee /dev/console | $logger
else
  exec 3>/dev/null 4>$bootlog
  exec 3>$bootlog
  ./linuxrc.generic.sh 2> $bootlog
fi

error_code=0
[ -e $error_code_file ] && error_code=$(cat $error_code_file)
[ -e $init_cmd_file ] && init_file=( $(cat $init_cmd_file) )
init_cmd=${init_file[0]}
new_root=${init_file[1]}

step

echo "Init_cmd: $init_cmd, newroot: $newroot"
if [ -n "$error_code" ] && [ $error_code -eq 0 ]; then
  if [ -n "$newroot" ] && [ -d $newroot ]; then
    cd $newroot
  fi
  exec 1>&- 2>&- 3>&- 4>&- 5>&-
  exec 1>/dev/console 2>/dev/console
  exec chroot . $init_cmd </dev/console >/dev/console 2>&1
elif [ -n "$error_code" ] && [ $error_code -eq 2 ]; then
  echo_local "Userquit falling back to bash.."
  exec 1>/dev/console 2>/dev/console /bin/bash
else
  echo_local "Error starting init-process falling back to bash."
  /rescue.sh
  exec 1>/dev/console 2>/dev/console /bin/bash
fi
#********** main

################
# $Log: linuxrc,v $
# Revision 1.7  2006-06-07 09:42:23  marc
# *** empty log message ***
#
# Revision 1.6  2006/05/12 13:06:13  marc
# New redirections and other fixes.
#
# Revision 1.5  2006/05/07 11:35:05  marc
# major change to version 1.0.
# Complete redesign.
#
# Revision 1.4  2006/05/03 12:46:30  marc
# added documentation
#
